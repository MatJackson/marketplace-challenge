/*
 * Shopify Market API - 2019 Intern Challenge
 * Barebones of an online marketplace for the 2019 shopify intern challenge.  This API provides the ability to search through and make purchases from the  product catalog. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: mjackson74u@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ERRORUNKNOWN;
import io.swagger.client.model.Product;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProductApi
 */
@Ignore
public class ProductApiTest {

    private final ProductApi api = new ProductApi();

    
    /**
     * Get all products in stock
     *
     * Returns all products who&#39;se inventory is greater than 0
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAvailableProductsTest() throws ApiException {
        api.getAvailableProducts();

        // TODO: test validations
    }
    
    /**
     * Find product by ID
     *
     * Returns a single product
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProductByIdTest() throws ApiException {
        ERRORUNKNOWN id = null;
        Product response = api.getProductById(id);

        // TODO: test validations
    }
    
    /**
     * Find product by title
     *
     * Returns all products containing the inputed title
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProductByTitleTest() throws ApiException {
        ERRORUNKNOWN title = null;
        api.getProductByTitle(title);

        // TODO: test validations
    }
    
    /**
     * Get entire product catalog
     *
     * Returns entire product catalog
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProductsTest() throws ApiException {
        api.getProducts();

        // TODO: test validations
    }
    
    /**
     * Find products in price range
     *
     * Returns all products within indicated price range
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProductsInPriceRangeTest() throws ApiException {
        ERRORUNKNOWN priceFrom = null;
        ERRORUNKNOWN priceTo = null;
        api.getProductsInPriceRange(priceFrom, priceTo);

        // TODO: test validations
    }
    
    /**
     * purchase an item by id
     *
     * Decrements the quantity in stock of a product by 1 and returns updated product
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void purchaseProductByIdTest() throws ApiException {
        ERRORUNKNOWN id = null;
        Product response = api.purchaseProductById(id);

        // TODO: test validations
    }
    
}
